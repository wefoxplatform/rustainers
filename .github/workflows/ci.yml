on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: Continuous integration

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  MSRV: 1.71.1

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust: $MSRV
          - rust: stable
          - rust: beta
          - rust: nightly

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Build
        run: cargo build --verbose
      - name: Documentation
        run: cargo doc --verbose
      - name: Tests
        run: cargo test --verbose

  tests_with_podman:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - rust: stable

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Install podman compose
        run: |
          pipx install podman-compose
      - name: Build
        run: cargo build --verbose --features ensure-podman
      - name: Documentation
        run: cargo doc --verbose --features ensure-podman
      - name: Tests
        run: cargo test --verbose --features ensure-podman

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@beta
        with:
          components: clippy
      - name: Lint
        run: cargo clippy

  minimal-versions:
    name: Check MSRV and minimal-versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: $MSRV
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack
      - run: cargo +nightly hack generate-lockfile --remove-dev-deps -Z direct-minimal-versions
      - name: Build
        run: cargo build --verbose --all-features

  docker_in_docker:
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/docker/library/rust:1.76

    steps:
      - uses: actions/checkout@v4
      - name: Setup container
        run: |
          .devcontainer/dev-container-setup.sh
      - name: Build
        run: cargo build --verbose
      - name: Tests
        run: cargo test -- --test should_work_dind --nocapture
